{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport usePoller from \"./Poller.js\";\nimport useBlockNumber from \"./BlockNumber.js\";\nexport default function useTimestamp(provider, pollTime) {\n  const blockNumber = useBlockNumber(provider, pollTime);\n  const [timestamp, setTimestamp] = useState();\n  useEffect(() => {\n    if (typeof provider !== \"undefined\") {\n      async function getTimestamp() {\n        let nextBlock = await provider.getBlock(blockNumber);\n\n        if (typeof nextBlock !== \"undefined\" && nextBlock && nextBlock.timestamp) {\n          const nextTimestamp = nextBlock.timestamp;\n\n          if (nextTimestamp !== timestamp) {\n            setTimestamp(nextTimestamp);\n          }\n        }\n      }\n\n      getTimestamp();\n    }\n  }, [provider, blockNumber]);\n  return timestamp;\n}","map":{"version":3,"sources":["/Users/ken/Documents/scaffold-eth/packages/react-app/src/hooks/Timestamp.js"],"names":["useState","useEffect","usePoller","useBlockNumber","useTimestamp","provider","pollTime","blockNumber","timestamp","setTimestamp","getTimestamp","nextBlock","getBlock","nextTimestamp"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,YAAT,CAAsBC,QAAtB,EAA+BC,QAA/B,EAAyC;AAEtD,QAAMC,WAAW,GAAGJ,cAAc,CAACE,QAAD,EAAUC,QAAV,CAAlC;AAEA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,OAAOI,QAAP,KAAoB,WAAvB,EAAmC;AACjC,qBAAeK,YAAf,GAA8B;AAC5B,YAAIC,SAAS,GAAG,MAAMN,QAAQ,CAACO,QAAT,CAAkBL,WAAlB,CAAtB;;AACA,YAAG,OAAOI,SAAP,KAAqB,WAArB,IAAoCA,SAApC,IAAiDA,SAAS,CAACH,SAA9D,EAAwE;AACtE,gBAAMK,aAAa,GAAGF,SAAS,CAACH,SAAhC;;AACA,cAAGK,aAAa,KAAGL,SAAnB,EAA6B;AAC3BC,YAAAA,YAAY,CAACI,aAAD,CAAZ;AACD;AACF;AACF;;AACDH,MAAAA,YAAY;AACb;AACF,GAbQ,EAaN,CAACL,QAAD,EAAUE,WAAV,CAbM,CAAT;AAeA,SAAOC,SAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\nimport usePoller from \"./Poller.js\";\nimport useBlockNumber from \"./BlockNumber.js\";\n\nexport default function useTimestamp(provider,pollTime) {\n\n  const blockNumber = useBlockNumber(provider,pollTime)\n\n  const [timestamp, setTimestamp] = useState()\n\n  useEffect(() => {\n    if(typeof provider !== \"undefined\"){\n      async function getTimestamp() {\n        let nextBlock = await provider.getBlock(blockNumber)\n        if(typeof nextBlock !== \"undefined\" && nextBlock && nextBlock.timestamp){\n          const nextTimestamp = nextBlock.timestamp\n          if(nextTimestamp!==timestamp){\n            setTimestamp(nextTimestamp)\n          }\n        }\n      }\n      getTimestamp();\n    }\n  }, [provider,blockNumber]);\n\n  return timestamp;\n}\n"]},"metadata":{},"sourceType":"module"}