{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import usePoller from\"./Poller.js\";export default function useBlockNumber(provider,pollTime){var _useState=useState(),_useState2=_slicedToArray(_useState,2),blockNumber=_useState2[0],setBlockNumber=_useState2[1];usePoller(function(){if(typeof provider!==\"undefined\"){var getBlockNumber=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var nextBlockNumber;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return provider.getBlockNumber();case 2:nextBlockNumber=_context.sent;if(nextBlockNumber!==blockNumber){setBlockNumber(nextBlockNumber);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function getBlockNumber(){return _ref.apply(this,arguments);};}();getBlockNumber();}},pollTime?pollTime:1777);return blockNumber;}","map":{"version":3,"sources":["/Users/ken/Documents/scaffold-eth/packages/react-app/src/hooks/BlockNumber.js"],"names":["useState","usePoller","useBlockNumber","provider","pollTime","blockNumber","setBlockNumber","getBlockNumber","nextBlockNumber"],"mappings":"qcAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,QAAxB,CAAiCC,QAAjC,CAA2C,eAElBJ,QAAQ,EAFU,wCAEjDK,WAFiD,eAEpCC,cAFoC,eAIxDL,SAAS,CAAC,UAAM,CACd,GAAG,MAAOE,CAAAA,QAAP,GAAoB,WAAvB,CAAmC,IAClBI,CAAAA,cADkB,0FACjC,6KAC8BJ,CAAAA,QAAQ,CAACI,cAAT,EAD9B,QACMC,eADN,eAEE,GAAGA,eAAe,GAAGH,WAArB,CAAiC,CAC/BC,cAAc,CAACE,eAAD,CAAd,CACD,CAJH,sDADiC,kBAClBD,CAAAA,cADkB,2CAOjCA,cAAc,GACf,CACF,CAVQ,CAUPH,QAAQ,CAACA,QAAD,CAAU,IAVX,CAAT,CAYA,MAAOC,CAAAA,WAAP,CACD","sourcesContent":["import { useState } from 'react';\nimport usePoller from \"./Poller.js\";\n\nexport default function useBlockNumber(provider,pollTime) {\n\n  const [blockNumber, setBlockNumber] = useState()\n\n  usePoller(() => {\n    if(typeof provider !== \"undefined\"){\n      async function getBlockNumber() {\n        let nextBlockNumber = await provider.getBlockNumber()\n        if(nextBlockNumber!==blockNumber){\n          setBlockNumber(nextBlockNumber)\n        }\n      }\n      getBlockNumber();\n    }\n  },pollTime?pollTime:1777)\n\n  return blockNumber;\n}\n"]},"metadata":{},"sourceType":"module"}