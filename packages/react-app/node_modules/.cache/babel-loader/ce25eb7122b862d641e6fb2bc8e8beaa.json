{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{usePoller}from\".\";import{ethers}from\"ethers\";import{MAINNET_ID,addresses,abis}from\"@uniswap-v1-app/contracts\";export default function useExchangePrice(mainnetProvider,pollTime){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),price=_useState2[0],setPrice=_useState2[1];var pollPrice=function pollPrice(){function getPrice(){return _getPrice.apply(this,arguments);}function _getPrice(){_getPrice=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var ethDaiExchangeContract,exchangeRate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:ethDaiExchangeContract=new ethers.Contract(addresses[MAINNET_ID].exchanges[\"ETH-DAI\"],abis.exchange,mainnetProvider);_context.next=3;return ethDaiExchangeContract.getEthToTokenInputPrice(\"10000000000000000000\");case 3:exchangeRate=_context.sent;setPrice(parseFloat(exchangeRate.div(\"100000000000000000\"))/100);case 5:case\"end\":return _context.stop();}}},_callee);}));return _getPrice.apply(this,arguments);}getPrice();};usePoller(pollPrice,pollTime?pollTime:9777);return price;}","map":{"version":3,"sources":["/Users/ken/Documents/scaffold-eth/packages/react-app/src/hooks/ExchangePrice.js"],"names":["useState","usePoller","ethers","MAINNET_ID","addresses","abis","useExchangePrice","mainnetProvider","pollTime","price","setPrice","pollPrice","getPrice","ethDaiExchangeContract","Contract","exchanges","exchange","getEthToTokenInputPrice","exchangeRate","parseFloat","div"],"mappings":"qcAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,SAAT,KAA0B,GAA1B,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,UAAT,CAAqBC,SAArB,CAAgCC,IAAhC,KAA4C,2BAA5C,CAEA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,eAA1B,CAA0CC,QAA1C,CAAoD,eAEvCR,QAAQ,CAAC,CAAD,CAF+B,wCAE1DS,KAF0D,eAEnDC,QAFmD,eAIjE,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,SACPC,CAAAA,QADO,kIACtB,2KACQC,sBADR,CACiC,GAAIX,CAAAA,MAAM,CAACY,QAAX,CAC7BV,SAAS,CAACD,UAAD,CAAT,CAAsBY,SAAtB,CAAgC,SAAhC,CAD6B,CAE7BV,IAAI,CAACW,QAFwB,CAG7BT,eAH6B,CADjC,uBAM6BM,CAAAA,sBAAsB,CAACI,uBAAvB,CAA+C,sBAA/C,CAN7B,QAMQC,YANR,eAOER,QAAQ,CAACS,UAAU,CAACD,YAAY,CAACE,GAAb,CAAiB,oBAAjB,CAAD,CAAV,CAAmD,GAApD,CAAR,CAPF,sDADsB,2CAUtBR,QAAQ,GACT,CAXD,CAYAX,SAAS,CAACU,SAAD,CAAWH,QAAQ,CAACA,QAAD,CAAU,IAA7B,CAAT,CAEA,MAAOC,CAAAA,KAAP,CACD","sourcesContent":["import { useState } from 'react';\nimport { usePoller } from \".\";\nimport { ethers } from \"ethers\";\nimport { MAINNET_ID, addresses, abis } from \"@uniswap-v1-app/contracts\";\n\nexport default function useExchangePrice(mainnetProvider,pollTime) {\n\n  const [price, setPrice] = useState(0);\n\n  const pollPrice = () => {\n    async function getPrice() {\n      const ethDaiExchangeContract = new ethers.Contract(\n        addresses[MAINNET_ID].exchanges[\"ETH-DAI\"],\n        abis.exchange,\n        mainnetProvider,\n      );\n      const exchangeRate = await ethDaiExchangeContract.getEthToTokenInputPrice(\"10000000000000000000\");\n      setPrice(parseFloat(exchangeRate.div(\"100000000000000000\"))/100)\n    }\n    getPrice();\n  }\n  usePoller(pollPrice,pollTime?pollTime:9777)\n\n  return price;\n}\n"]},"metadata":{},"sourceType":"module"}