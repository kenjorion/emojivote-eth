{"ast":null,"code":"import _slicedToArray from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Input,Button,Tooltip}from'antd';import Blockies from'react-blockies';import{SendOutlined}from'@ant-design/icons';import{ethers}from\"ethers\";import{Transactor}from\"../helpers\";export default function Faucet(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var blockie;if(address&&typeof address.toLowerCase==\"function\"){blockie=/*#__PURE__*/React.createElement(Blockies,{seed:address.toLowerCase(),size:8,scale:3});}else{blockie=/*#__PURE__*/React.createElement(\"div\",null);}var localTx=Transactor(props.localProvider);return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(Input,{size:\"large\",placeholder:\"local faucet\",prefix:blockie,value:address,onChange:function onChange(e){setAddress(e.target.value);},suffix:/*#__PURE__*/React.createElement(Tooltip,{title:\"Faucet: Send local ether to and address.\"},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){localTx({to:address,value:ethers.utils.parseEther('0.01')});setAddress(\"\");},shape:\"circle\",icon:/*#__PURE__*/React.createElement(SendOutlined,null)}))}));}","map":{"version":3,"sources":["/Users/ken/Documents/scaffold-eth/packages/react-app/src/components/Faucet.js"],"names":["React","useState","Input","Button","Tooltip","Blockies","SendOutlined","ethers","Transactor","Faucet","props","address","setAddress","blockie","toLowerCase","localTx","localProvider","e","target","value","to","utils","parseEther"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,OAAxB,KAAuC,MAAvC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,OAASC,YAAT,KAA8B,mBAA9B,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,UAAT,KAA2B,YAA3B,CAGA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,eAENT,QAAQ,EAFF,wCAE7BU,OAF6B,eAEpBC,UAFoB,eAIpC,GAAIC,CAAAA,OAAJ,CACA,GAAGF,OAAO,EAAI,MAAOA,CAAAA,OAAO,CAACG,WAAf,EAA4B,UAA1C,CAAqD,CACnDD,OAAO,cACH,oBAAC,QAAD,EAAU,IAAI,CAAEF,OAAO,CAACG,WAAR,EAAhB,CAAuC,IAAI,CAAE,CAA7C,CAAgD,KAAK,CAAE,CAAvD,EADJ,CAGD,CAJD,IAIK,CACHD,OAAO,cACL,+BADF,CAGD,CAED,GAAME,CAAAA,OAAO,CAAGP,UAAU,CAACE,KAAK,CAACM,aAAP,CAA1B,CAEA,mBACE,6CACI,oBAAC,KAAD,EACE,IAAI,CAAC,OADP,CAEE,WAAW,CAAC,cAFd,CAGE,MAAM,CAAEH,OAHV,CAIE,KAAK,CAAEF,OAJT,CAKE,QAAQ,CAAE,kBAACM,CAAD,CAAK,CACbL,UAAU,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,CACD,CAPH,CAQE,MAAM,cACJ,oBAAC,OAAD,EAAS,KAAK,CAAC,0CAAf,eACE,oBAAC,MAAD,EAAQ,OAAO,CAAE,kBAAI,CACnBJ,OAAO,CAAC,CACNK,EAAE,CAAET,OADE,CAENQ,KAAK,CAAEZ,MAAM,CAACc,KAAP,CAAaC,UAAb,CAAwB,MAAxB,CAFD,CAAD,CAAP,CAIAV,UAAU,CAAC,EAAD,CAAV,CACD,CAND,CAMG,KAAK,CAAC,QANT,CAMkB,IAAI,cAAE,oBAAC,YAAD,MANxB,EADF,CATJ,EADJ,CADF,CAwBD","sourcesContent":["import React, { useState } from 'react'\nimport { Input, Button, Tooltip } from 'antd';\nimport Blockies from 'react-blockies';\nimport { SendOutlined } from  '@ant-design/icons';\nimport { ethers } from \"ethers\";\nimport { Transactor } from \"../helpers\"\n\n\nexport default function Faucet(props) {\n\n  const [address, setAddress] = useState()\n\n  let blockie\n  if(address && typeof address.toLowerCase==\"function\"){\n    blockie = (\n        <Blockies seed={address.toLowerCase()} size={8} scale={3}/>\n    )\n  }else{\n    blockie = (\n      <div></div>\n    )\n  }\n\n  const localTx = Transactor(props.localProvider)\n\n  return (\n    <span>\n        <Input\n          size=\"large\"\n          placeholder=\"local faucet\"\n          prefix={blockie}\n          value={address}\n          onChange={(e)=>{\n            setAddress(e.target.value)\n          }}\n          suffix={\n            <Tooltip title=\"Faucet: Send local ether to and address.\">\n              <Button onClick={()=>{\n                localTx({\n                  to: address,\n                  value: ethers.utils.parseEther('0.01'),\n                })\n                setAddress(\"\")\n              }} shape=\"circle\" icon={<SendOutlined />} />\n            </Tooltip>\n          }\n        />\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}