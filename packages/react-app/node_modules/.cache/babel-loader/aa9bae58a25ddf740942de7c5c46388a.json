{"ast":null,"code":"import _slicedToArray from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{ethers}from\"ethers\";import{useTimestamp}from\"./hooks\";import{Card}from'antd';//import * as loadedVotes from \"./validVotes.json\"\nexport default function TimeReport(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),votes=_useState2[0],setVotes=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),results=_useState4[0],setResults=_useState4[1];var loadedVotes=require(\"./validVotes.json\");useEffect(function(){try{//let loadedVotes = require(\"./validVotes.json\")\nsetVotes(loadedVotes);var newResults={};for(var v in loadedVotes){if(newResults[loadedVotes[v].vote]){newResults[loadedVotes[v].vote]=newResults[loadedVotes[v].vote].add(loadedVotes[v].balance);}else{newResults[loadedVotes[v].vote]=ethers.utils.bigNumberify(loadedVotes[v].balance);}}setResults(newResults);}catch(e){console.log(\"ERR\",e);}},[]);var displayVotes=[];var winner;var test=JSON.stringify(loadedVotes);test=JSON.parse(test);var voteArray=Object.values(test);var compteur=0;for(var r in results){console.log(voteArray[compteur].address);var address=voteArray[compteur].address;var floatValue=parseFloat(results[r]);if(typeof winner==\"undefined\"||winner.floatValue<floatValue){winner={vote:r,floatValue:floatValue};}displayVotes.push(/*#__PURE__*/React.createElement(\"div\",{key:\"vote\".concat(r)},/*#__PURE__*/React.createElement(\"b\",null,address),/*#__PURE__*/React.createElement(\"span\",null,\" avec \\uD83D\\uDCB8 wallet : \",floatValue.toFixed(2),\" votes for \",r)));compteur++;}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Card,{title:/*#__PURE__*/React.createElement(\"div\",null,\"\\uD83D\\uDCD1  Votes: ( \",winner?winner.vote+\" is winning\":\"\",\" )\"),size:\"large\",style:{width:550,marginTop:25}},displayVotes));}","map":{"version":3,"sources":["/Users/ken/Documents/scaffold-eth/packages/react-app/src/VoteReport.js"],"names":["React","useEffect","useState","ethers","useTimestamp","Card","TimeReport","props","votes","setVotes","results","setResults","loadedVotes","require","newResults","v","vote","add","balance","utils","bigNumberify","e","console","log","displayVotes","winner","test","JSON","stringify","parse","voteArray","Object","values","compteur","r","address","floatValue","parseFloat","push","toFixed","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { ethers } from \"ethers\";\nimport { useTimestamp } from \"./hooks\"\nimport { Card } from 'antd';\n//import * as loadedVotes from \"./validVotes.json\"\n\nexport default function TimeReport(props) {\n\n  const [votes, setVotes] = useState([])\n  const [results, setResults] = useState([])\n  const loadedVotes = require(\"./validVotes.json\")\n\n  useEffect(()=>{\n    try{\n      //let loadedVotes = require(\"./validVotes.json\")\n      setVotes(loadedVotes)\n      let newResults = {}\n      for(let v in loadedVotes){\n        if(newResults[loadedVotes[v].vote]){\n          newResults[loadedVotes[v].vote] = newResults[loadedVotes[v].vote].add(loadedVotes[v].balance)\n        }else{\n          newResults[loadedVotes[v].vote] = ethers.utils.bigNumberify(loadedVotes[v].balance)\n        }\n      }\n      setResults(newResults)\n    }catch(e){console.log(\"ERR\",e)}\n  },[])\n\n  let displayVotes = []\n  let winner\n  let test = JSON.stringify(loadedVotes);\n  test = JSON.parse(test);\n  \n  const voteArray = Object.values(test);\n  let compteur = 0;\n    for(let r in results){\n      console.log(voteArray[compteur].address);\n      let address = voteArray[compteur].address;\n      let floatValue = parseFloat(results[r]);\n      if( typeof winner == \"undefined\" || winner.floatValue < floatValue){\n        winner = {\n          vote:r,\n          floatValue:floatValue,\n        }\n      }\n      displayVotes.push(\n        <div key={`vote${ r }`}>\n          <b>{ address }</b> \n          <span> avec ðŸ’¸ wallet : { floatValue.toFixed(2) } votes for { r }</span>\n        </div>\n      )\n      compteur++;\n    }\n\n  return (\n    <div>\n      <Card\n        title={(\n          <div>\n            ðŸ“‘  Votes: ( {winner?winner.vote+\" is winning\":\"\"} )\n          </div>\n        )}\n        size=\"large\"\n        style={{ width: 550, marginTop: 25 }}\n        >\n          {displayVotes}\n      </Card>\n    </div>\n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}