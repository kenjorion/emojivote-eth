{"ast":null,"code":"var _jsxFileName = \"/Users/ken/Documents/scaffold-eth/packages/react-app/src/components/Ramp.js\";\nimport React, { useState } from 'react';\nimport { Input, Button, Tooltip, Modal, Divider } from 'antd';\nimport { DollarCircleOutlined } from '@ant-design/icons';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nexport default function Ramp(props) {\n  const [modalUp, setModalUp] = useState(\"down\");\n  const type = \"default\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    shape: \"round\",\n    onClick: () => {\n      setModalUp(\"up\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DollarCircleOutlined, {\n    style: {\n      color: \"#52c41a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), \" \", props.price.toFixed(2)), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Buy ETH\",\n    visible: modalUp === \"up\",\n    onCancel: () => {\n      setModalUp(\"down\");\n    },\n    footer: [/*#__PURE__*/React.createElement(Button, {\n      key: \"back\",\n      onClick: () => {\n        setModalUp(\"down\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"cancel\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: type,\n    size: \"large\",\n    shape: \"round\",\n    onClick: () => {\n      window.open(\"https://pay.sendwyre.com/purchase?destCurrency=ETH&sourceAmount=25&dest=\" + props.address);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"\\uD83C\\uDDFA\\uD83C\\uDDF8\"), \"Wyre\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }, \"  \", /*#__PURE__*/React.createElement(Button, {\n    type: type,\n    size: \"large\",\n    shape: \"round\",\n    onClick: () => {\n      new RampInstantSDK({\n        hostAppName: 'scaffold-eth',\n        hostLogoUrl: 'https://scaffoldeth.io/scaffold-eth.png',\n        swapAmount: '100000000000000000',\n        // 0.1 ETH in wei  ?\n        swapAsset: 'ETH',\n        userAddress: props.address\n      }).on('*', event => console.log(event)).show();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"\\uD83C\\uDDEC\\uD83C\\uDDE7\"), \"Ramp\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: type,\n    size: \"large\",\n    shape: \"round\",\n    onClick: () => {\n      window.open(\"https://www.coinbase.com/buy-ethereum\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"\\uD83C\\uDFE6\"), \"Coinbase\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: type,\n    size: \"large\",\n    shape: \"round\",\n    onClick: () => {\n      window.open(\"https://support.mycrypto.com/how-to/getting-started/where-to-get-testnet-ether\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingRight: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"\\uD83D\\uDEE0\"), \" Testnet Faucets\"))));\n}","map":{"version":3,"sources":["/Users/ken/Documents/scaffold-eth/packages/react-app/src/components/Ramp.js"],"names":["React","useState","Input","Button","Tooltip","Modal","Divider","DollarCircleOutlined","RampInstantSDK","Ramp","props","modalUp","setModalUp","type","color","price","toFixed","window","open","address","paddingRight","hostAppName","hostLogoUrl","swapAmount","swapAsset","userAddress","on","event","console","log","show"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Input, Button, Tooltip, Modal, Divider } from 'antd';\nimport { DollarCircleOutlined } from  '@ant-design/icons';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\n\nexport default function Ramp(props) {\n\n  const [ modalUp, setModalUp ] = useState(\"down\")\n\n  const type = \"default\"\n\n  return (\n    <div>\n      <Button size=\"large\" shape=\"round\" onClick={()=>{\n        setModalUp(\"up\")\n      }}>\n        <DollarCircleOutlined style={{color:\"#52c41a\"}}/> {props.price.toFixed(2)}\n      </Button>\n      <Modal\n         title=\"Buy ETH\"\n         visible={modalUp===\"up\"}\n         onCancel={()=>{setModalUp(\"down\")}}\n         footer={[\n            <Button key=\"back\" onClick={()=>{setModalUp(\"down\")}}>\n              cancel\n            </Button>\n          ]}\n       >\n\n         <p><Button type={type} size=\"large\" shape=\"round\" onClick={()=>{\n           window.open(\"https://pay.sendwyre.com/purchase?destCurrency=ETH&sourceAmount=25&dest=\"+props.address)\n         }}>\n            <span style={{paddingRight:15}}>🇺🇸</span>Wyre\n           </Button></p>\n         <p>  <Button type={type} size=\"large\" shape=\"round\" onClick={()=>{\n           new RampInstantSDK({\n             hostAppName: 'scaffold-eth',\n             hostLogoUrl: 'https://scaffoldeth.io/scaffold-eth.png',\n             swapAmount: '100000000000000000', // 0.1 ETH in wei  ?\n             swapAsset: 'ETH',\n             userAddress: props.address,\n           }).on('*', event => console.log(event)).show();\n         }}>\n            <span style={{paddingRight:15}}>🇬🇧</span>Ramp\n           </Button></p>\n\n           <p>\n            <Button type={type} size=\"large\" shape=\"round\" onClick={()=>{window.open(\"https://www.coinbase.com/buy-ethereum\")}}>\n              <span style={{paddingRight:15}}>🏦</span>Coinbase\n            </Button>\n           </p>\n\n           <Divider />\n\n           <p>\n            <Button type={type} size=\"large\" shape=\"round\" onClick={()=>{window.open(\"https://support.mycrypto.com/how-to/getting-started/where-to-get-testnet-ether\")}}>\n              <span style={{paddingRight:15}}>🛠</span> Testnet Faucets\n            </Button>\n           </p>\n\n       </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}