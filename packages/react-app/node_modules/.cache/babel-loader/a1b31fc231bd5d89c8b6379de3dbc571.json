{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useState,useEffect,useRef}from'react';import{ethers}from\"ethers\";import BurnerProvider from'burner-provider';import Web3Modal from\"web3modal\";import{Balance,Address}from\".\";import{usePoller}from\"../hooks\";import WalletConnectProvider from\"@walletconnect/web3-provider\";import{Button,Typography}from'antd';var Text=Typography.Text;var INFURA_ID=\"2717afb6bf164045b5d5468031b93f87\";// MY INFURA_ID, SWAP IN YOURS!\nvar web3Modal=new Web3Modal({//network: \"mainnet\", // optional\ncacheProvider:true,// optional\nproviderOptions:{walletconnect:{package:WalletConnectProvider,// required\noptions:{infuraId:INFURA_ID}}}});export default function Account(props){var createBurnerIfNoAddress=function createBurnerIfNoAddress(){if(!props.injectedProvider&&props.localProvider){if(props.localProvider.connection&&props.localProvider.connection.url){props.setInjectedProvider(new ethers.providers.Web3Provider(new BurnerProvider(props.localProvider.connection.url)));}else if(props.localProvider._network&&props.localProvider._network.name){props.setInjectedProvider(new ethers.providers.Web3Provider(new BurnerProvider(\"https://\"+props.localProvider._network.name+\".infura.io/v3/\"+INFURA_ID)));}else{props.setInjectedProvider(new ethers.providers.Web3Provider(new BurnerProvider(\"https://mainnet.infura.io/v3/\"+INFURA_ID)));}}else{pollInjectedProvider();}};useEffect(createBurnerIfNoAddress,[props.injectedProvider]);var pollInjectedProvider=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var accounts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!props.injectedProvider){_context.next=5;break;}_context.next=3;return props.injectedProvider.listAccounts();case 3:accounts=_context.sent;if(accounts&&accounts[0]&&accounts[0]!=props.account){//console.log(\"ADDRESS: \",accounts[0])\nif(typeof props.setAddress==\"function\")props.setAddress(accounts[0]);}case 5:case\"end\":return _context.stop();}}},_callee);}));return function pollInjectedProvider(){return _ref.apply(this,arguments);};}();usePoller(function(){pollInjectedProvider();},props.pollTime?props.pollTime:1999);var loadWeb3Modal=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var provider;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return web3Modal.connect();case 2:provider=_context2.sent;//console.log(\"GOT CACHED PROVIDER FROM WEB3 MODAL\",provider)\nprops.setInjectedProvider(new ethers.providers.Web3Provider(provider));pollInjectedProvider();case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function loadWeb3Modal(){return _ref2.apply(this,arguments);};}();var logoutOfWeb3Modal=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var clear;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return web3Modal.clearCachedProvider();case 2:clear=_context3.sent;//console.log(\"Cleared cache provider!?!\",clear)\nsetTimeout(function(){window.location.reload();},1);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function logoutOfWeb3Modal(){return _ref3.apply(this,arguments);};}();var modalButtons=[];if(web3Modal.cachedProvider){modalButtons.push(/*#__PURE__*/React.createElement(Button,{key:\"logoutbutton\",style:{verticalAlign:\"top\",marginLeft:8,marginTop:4},shape:\"round\",size:\"large\",onClick:logoutOfWeb3Modal},\"logout\"));}else{modalButtons.push(/*#__PURE__*/React.createElement(Button,{key:\"loginbutton\",style:{verticalAlign:\"top\",marginLeft:8,marginTop:4},shape:\"round\",size:\"large\",type:\"primary\",onClick:loadWeb3Modal},\"connect\"));}React.useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(web3Modal.cachedProvider){loadWeb3Modal();}case 1:case\"end\":return _context4.stop();}}},_callee4);})),[]);return/*#__PURE__*/React.createElement(\"div\",null,props.address?/*#__PURE__*/React.createElement(Address,{value:props.address,ensProvider:props.mainnetProvider}):\"Connecting...\",/*#__PURE__*/React.createElement(Balance,{address:props.address,provider:props.injectedProvider,dollarMultiplier:props.price}),modalButtons);}","map":{"version":3,"sources":["/Users/ken/Documents/scaffold-eth/packages/react-app/src/components/Account.js"],"names":["React","useState","useEffect","useRef","ethers","BurnerProvider","Web3Modal","Balance","Address","usePoller","WalletConnectProvider","Button","Typography","Text","INFURA_ID","web3Modal","cacheProvider","providerOptions","walletconnect","package","options","infuraId","Account","props","createBurnerIfNoAddress","injectedProvider","localProvider","connection","url","setInjectedProvider","providers","Web3Provider","_network","name","pollInjectedProvider","listAccounts","accounts","account","setAddress","pollTime","loadWeb3Modal","connect","provider","logoutOfWeb3Modal","clearCachedProvider","clear","setTimeout","window","location","reload","modalButtons","cachedProvider","push","verticalAlign","marginLeft","marginTop","address","mainnetProvider","price"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { ethers } from \"ethers\";\nimport BurnerProvider from 'burner-provider';\nimport Web3Modal from \"web3modal\";\nimport { Balance, Address } from \".\"\nimport { usePoller } from \"../hooks\"\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Button, Typography } from 'antd';\nconst { Text } = Typography;\n\nconst INFURA_ID = \"2717afb6bf164045b5d5468031b93f87\"  // MY INFURA_ID, SWAP IN YOURS!\n\nconst web3Modal = new Web3Modal({\n  //network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\n\nexport default function Account(props) {\n\n  const createBurnerIfNoAddress = () => {\n    if (!props.injectedProvider && props.localProvider){\n      if(props.localProvider.connection && props.localProvider.connection.url){\n        props.setInjectedProvider(new ethers.providers.Web3Provider(new BurnerProvider(props.localProvider.connection.url)))\n      }else if( props.localProvider._network && props.localProvider._network.name ){\n        props.setInjectedProvider(new ethers.providers.Web3Provider(new BurnerProvider(\"https://\"+props.localProvider._network.name+\".infura.io/v3/\"+INFURA_ID)))\n      }else{\n        props.setInjectedProvider(new ethers.providers.Web3Provider(new BurnerProvider(\"https://mainnet.infura.io/v3/\"+INFURA_ID)))\n      }\n    }else{\n      pollInjectedProvider()\n    }\n  }\n  useEffect(createBurnerIfNoAddress, [props.injectedProvider]);\n\n  const pollInjectedProvider = async ()=>{\n    if(props.injectedProvider){\n      let accounts = await props.injectedProvider.listAccounts()\n      if(accounts && accounts[0] && accounts[0] != props.account){\n        //console.log(\"ADDRESS: \",accounts[0])\n        if(typeof props.setAddress == \"function\") props.setAddress(accounts[0])\n      }\n    }\n  }\n  usePoller(()=>{pollInjectedProvider()},props.pollTime?props.pollTime:1999)\n\n  const loadWeb3Modal = async ()=>{\n    const provider = await web3Modal.connect();\n    //console.log(\"GOT CACHED PROVIDER FROM WEB3 MODAL\",provider)\n    props.setInjectedProvider(new ethers.providers.Web3Provider(provider))\n    pollInjectedProvider()\n  }\n\n  const logoutOfWeb3Modal = async ()=>{\n    const clear = await web3Modal.clearCachedProvider();\n    //console.log(\"Cleared cache provider!?!\",clear)\n    setTimeout(()=>{\n      window.location.reload()\n    },1)\n  }\n\n  let modalButtons = []\n  if (web3Modal.cachedProvider) {\n    modalButtons.push(\n      <Button key=\"logoutbutton\" style={{verticalAlign:\"top\",marginLeft:8,marginTop:4}} shape={\"round\"} size={\"large\"}  onClick={logoutOfWeb3Modal}>logout</Button>\n    )\n  }else{\n    modalButtons.push(\n      <Button key=\"loginbutton\" style={{verticalAlign:\"top\",marginLeft:8,marginTop:4}} shape={\"round\"} size={\"large\"} type={\"primary\"} onClick={loadWeb3Modal}>connect</Button>\n    )\n  }\n\n  React.useEffect(async () => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal()\n    }\n  }, []);\n\n  return (\n    <div>\n      {props.address?(\n        <Address value={props.address} ensProvider={props.mainnetProvider}/>\n      ):\"Connecting...\"}\n      <Balance address={props.address} provider={props.injectedProvider} dollarMultiplier={props.price}/>\n      {modalButtons}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}