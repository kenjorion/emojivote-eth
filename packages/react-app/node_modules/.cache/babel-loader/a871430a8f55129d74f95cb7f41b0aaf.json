{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ken/Documents/scaffold-eth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{ethers}from\"ethers\";import{usePoller}from\"../hooks\";export default function Balance(props){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),dollarMode=_useState2[0],setDollarMode=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),balance=_useState4[0],setBalance=_useState4[1];usePoller(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newBalance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(props.address&&props.provider)){_context.next=11;break;}_context.prev=1;_context.next=4;return props.provider.getBalance(props.address);case 4:newBalance=_context.sent;setBalance(newBalance);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);})),props.pollTime?props.pollTime:1999);var floatBalance=parseFloat(\"0.00\");var usingBalance=balance;if(typeof props.balance!=\"undefined\"){usingBalance=props.balance;}if(usingBalance){var etherBalance=ethers.utils.formatEther(usingBalance);parseFloat(etherBalance).toFixed(2);floatBalance=parseFloat(etherBalance);}var displayBalance=floatBalance.toFixed(4);if(props.dollarMultiplier&&dollarMode){displayBalance=\"$\"+(floatBalance*props.dollarMultiplier).toFixed(2);}return/*#__PURE__*/React.createElement(\"span\",{style:{verticalAlign:\"middle\",fontSize:24,padding:8,cursor:'pointer'},onClick:function onClick(){setDollarMode(!dollarMode);}},displayBalance);}","map":{"version":3,"sources":["/Users/ken/Documents/scaffold-eth/packages/react-app/src/components/Balance.js"],"names":["React","useState","ethers","usePoller","Balance","props","dollarMode","setDollarMode","balance","setBalance","address","provider","getBalance","newBalance","console","log","pollTime","floatBalance","parseFloat","usingBalance","etherBalance","utils","formatEther","toFixed","displayBalance","dollarMultiplier","verticalAlign","fontSize","padding","cursor"],"mappings":"qcAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,SAAT,KAA0B,UAA1B,CAEA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,eAEDJ,QAAQ,CAAC,IAAD,CAFP,wCAE9BK,UAF8B,eAElBC,aAFkB,8BAGPN,QAAQ,EAHD,yCAG9BO,OAH8B,eAGrBC,UAHqB,eAIrCN,SAAS,sEAAC,uJACLE,KAAK,CAACK,OAAN,EAAiBL,KAAK,CAACM,QADlB,iEAGqBN,CAAAA,KAAK,CAACM,QAAN,CAAeC,UAAf,CAA0BP,KAAK,CAACK,OAAhC,CAHrB,QAGEG,UAHF,eAIJJ,UAAU,CAACI,UAAD,CAAV,CAJI,+EAMJC,OAAO,CAACC,GAAR,cANI,oEAAD,GASPV,KAAK,CAACW,QAAN,CAAeX,KAAK,CAACW,QAArB,CAA8B,IATvB,CAAT,CAWA,GAAIC,CAAAA,YAAY,CAAGC,UAAU,CAAC,MAAD,CAA7B,CAEA,GAAIC,CAAAA,YAAY,CAAGX,OAAnB,CAEA,GAAG,MAAOH,CAAAA,KAAK,CAACG,OAAb,EAAwB,WAA3B,CAAuC,CACrCW,YAAY,CAAGd,KAAK,CAACG,OAArB,CACD,CAED,GAAGW,YAAH,CAAgB,CACd,GAAIC,CAAAA,YAAY,CAAGlB,MAAM,CAACmB,KAAP,CAAaC,WAAb,CAAyBH,YAAzB,CAAnB,CACAD,UAAU,CAACE,YAAD,CAAV,CAAyBG,OAAzB,CAAiC,CAAjC,EACAN,YAAY,CAAGC,UAAU,CAACE,YAAD,CAAzB,CACD,CAED,GAAII,CAAAA,cAAc,CAAGP,YAAY,CAACM,OAAb,CAAqB,CAArB,CAArB,CAEA,GAAGlB,KAAK,CAACoB,gBAAN,EAA0BnB,UAA7B,CAAwC,CACtCkB,cAAc,CAAG,IAAI,CAACP,YAAY,CAACZ,KAAK,CAACoB,gBAApB,EAAsCF,OAAtC,CAA8C,CAA9C,CAArB,CACD,CAED,mBACE,4BAAM,KAAK,CAAE,CAACG,aAAa,CAAC,QAAf,CAAwBC,QAAQ,CAAC,EAAjC,CAAoCC,OAAO,CAAC,CAA5C,CAA8CC,MAAM,CAAC,SAArD,CAAb,CAA8E,OAAO,CAAE,kBAAI,CAACtB,aAAa,CAAC,CAACD,UAAF,CAAb,CAA2B,CAAvH,EACGkB,cADH,CADF,CAKD","sourcesContent":["import React, { useState } from 'react'\nimport { ethers } from \"ethers\";\nimport { usePoller } from \"../hooks\";\n\nexport default function Balance(props) {\n\n  const [dollarMode, setDollarMode] = useState(true);\n  const [balance, setBalance] = useState();\n  usePoller(async ()=>{\n    if(props.address && props.provider){\n      try{\n        const newBalance = await props.provider.getBalance(props.address)\n        setBalance(newBalance)\n      }catch(e){\n        console.log(e)\n      }\n    }\n  },props.pollTime?props.pollTime:1999)\n\n  let floatBalance = parseFloat(\"0.00\")\n\n  let usingBalance = balance\n\n  if(typeof props.balance != \"undefined\"){\n    usingBalance = props.balance\n  }\n\n  if(usingBalance){\n    let etherBalance = ethers.utils.formatEther(usingBalance)\n    parseFloat(etherBalance).toFixed(2)\n    floatBalance = parseFloat(etherBalance)\n  }\n\n  let displayBalance = floatBalance.toFixed(4)\n\n  if(props.dollarMultiplier && dollarMode){\n    displayBalance = \"$\"+(floatBalance*props.dollarMultiplier).toFixed(2)\n  }\n\n  return (\n    <span style={{verticalAlign:\"middle\",fontSize:24,padding:8,cursor:'pointer'}} onClick={()=>{setDollarMode(!dollarMode)}}>\n      {displayBalance}\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}